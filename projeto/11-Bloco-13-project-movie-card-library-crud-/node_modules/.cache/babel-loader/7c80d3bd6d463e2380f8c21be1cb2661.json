{"ast":null,"code":"var _jsxFileName = \"/home/michael/Desenvolvedor/trybe/turma-03-projetos-copia/gustavo/src/components/SearchBar.jsx\";\nimport React from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [['', 'Todos'], ['action', 'Ação'], ['comedy', 'Comédia'], ['thriller', 'Suspense']];\n\nfunction searchTextLabel(text, onChange) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: 'searchText',\n    className: 'flex-label',\n    children: [\"Inclui o texto:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      value: text,\n      id: 'searchText',\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nfunction bookMarkedLabel(check, onChange) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: 'check',\n    className: 'flex-label',\n    children: [\"Mostrar somente favoritos\", /*#__PURE__*/_jsxDEV(\"input\", {\n      className: 'check',\n      type: 'checkbox',\n      id: 'check',\n      checked: check,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\nfunction SearchBar(props) {\n  const {\n    searchText,\n    bookmarkedOnly,\n    selectedGenre\n  } = props;\n  const {\n    onSearchTextChange,\n    onBookmarkedChange,\n    onSelectedGenreChange\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: 'forms-search-bar',\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Procure um Card\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }, this), searchTextLabel(searchText, onSearchTextChange), bookMarkedLabel(bookmarkedOnly, onBookmarkedChange), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: 'genreFilter',\n      className: 'flex-label',\n      children: [\"Filtrar por g\\xEAnero\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedGenre,\n        id: 'genreFilter',\n        onChange: onSelectedGenreChange,\n        children: options.map(([en, pt]) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: en,\n          children: pt\n        }, en, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["/home/michael/Desenvolvedor/trybe/turma-03-projetos-copia/gustavo/src/components/SearchBar.jsx"],"names":["React","options","searchTextLabel","text","onChange","bookMarkedLabel","check","SearchBar","props","searchText","bookmarkedOnly","selectedGenre","onSearchTextChange","onBookmarkedChange","onSelectedGenreChange","map","en","pt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;;AAEA,MAAMC,OAAO,GAAG,CACd,CAAC,EAAD,EAAK,OAAL,CADc,EAEd,CAAC,QAAD,EAAW,MAAX,CAFc,EAGd,CAAC,QAAD,EAAW,SAAX,CAHc,EAId,CAAC,UAAD,EAAa,UAAb,CAJc,CAAhB;;AAOA,SAASC,eAAT,CAAyBC,IAAzB,EAA+BC,QAA/B,EAAyC;AACvC,sBACE;AAAO,IAAA,OAAO,EAAE,YAAhB;AAA8B,IAAA,SAAS,EAAE,YAAzC;AAAA,+CACE;AACE,MAAA,IAAI,EAAE,MADR;AAEE,MAAA,KAAK,EAAED,IAFT;AAGE,MAAA,EAAE,EAAE,YAHN;AAIE,MAAA,QAAQ,EAAEC;AAJZ;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,SAASC,eAAT,CAAyBC,KAAzB,EAAgCF,QAAhC,EAA0C;AACxC,sBACE;AAAO,IAAA,OAAO,EAAE,OAAhB;AAAyB,IAAA,SAAS,EAAE,YAApC;AAAA,yDACE;AACE,MAAA,SAAS,EAAE,OADb;AAEE,MAAA,IAAI,EAAE,UAFR;AAGE,MAAA,EAAE,EAAE,OAHN;AAIE,MAAA,OAAO,EAAEE,KAJX;AAKE,MAAA,QAAQ,EAAEF;AALZ;AAAA;AAAA;AAAA;AAAA,YADF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;AAED,SAASG,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,cAAd;AAA8BC,IAAAA;AAA9B,MAAgDH,KAAtD;AACA,QAAM;AAAEI,IAAAA,kBAAF;AAAsBC,IAAAA,kBAAtB;AAA0CC,IAAAA;AAA1C,MAAoEN,KAA1E;AACA,sBACE;AAAM,IAAA,SAAS,EAAE,kBAAjB;AAAA,4BAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAArC,EACGN,eAAe,CAACO,UAAD,EAAaG,kBAAb,CADlB,EAEGP,eAAe,CAACK,cAAD,EAAiBG,kBAAjB,CAFlB,eAGE;AAAO,MAAA,OAAO,EAAE,aAAhB;AAA+B,MAAA,SAAS,EAAE,YAA1C;AAAA,uDACE;AACE,QAAA,KAAK,EAAEF,aADT;AAEE,QAAA,EAAE,EAAE,aAFN;AAGE,QAAA,QAAQ,EAAEG,qBAHZ;AAAA,kBAKGb,OAAO,CAACc,GAAR,CAAY,CAAC,CAACC,EAAD,EAAKC,EAAL,CAAD,kBAAc;AAAiB,UAAA,KAAK,EAAED,EAAxB;AAAA,oBAA6BC;AAA7B,WAAaD,EAAb;AAAA;AAAA;AAAA;AAAA,gBAA1B;AALH;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAlBQT,S;AAoBT,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nimport './SearchBar.css';\n\nconst options = [\n  ['', 'Todos'],\n  ['action', 'Ação'],\n  ['comedy', 'Comédia'],\n  ['thriller', 'Suspense'],\n];\n\nfunction searchTextLabel(text, onChange) {\n  return (\n    <label htmlFor={'searchText'} className={'flex-label'}>Inclui o texto:\n      <input\n        type={'text'}\n        value={text}\n        id={'searchText'}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nfunction bookMarkedLabel(check, onChange) {\n  return (\n    <label htmlFor={'check'} className={'flex-label'}>Mostrar somente favoritos\n      <input\n        className={'check'}\n        type={'checkbox'}\n        id={'check'}\n        checked={check}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nfunction SearchBar(props) {\n  const { searchText, bookmarkedOnly, selectedGenre } = props;\n  const { onSearchTextChange, onBookmarkedChange, onSelectedGenreChange } = props;\n  return (\n    <form className={'forms-search-bar'}><h3>Procure um Card</h3>\n      {searchTextLabel(searchText, onSearchTextChange)}\n      {bookMarkedLabel(bookmarkedOnly, onBookmarkedChange)}\n      <label htmlFor={'genreFilter'} className={'flex-label'}>Filtrar por gênero\n        <select\n          value={selectedGenre}\n          id={'genreFilter'}\n          onChange={onSelectedGenreChange}\n        >\n          {options.map(([en, pt]) => <option key={en} value={en}>{pt}</option>)}\n        </select>\n      </label>\n    </form>\n  );\n}\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}