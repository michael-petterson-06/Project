{"ast":null,"code":"var _jsxFileName = \"/home/michael/Desenvolvedor/trybe/turma-03-projetos-copia/ana-test/projeto-filme-2/src/components/MovieLibrary.jsx\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: this.props.movies\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onChange(event, chave) {\n    this.setState({\n      [chave]: chave === 'bookmarkedOnly' ? event.target.checked : event.target.value\n    });\n  }\n\n  onClick(newMovie) {\n    const {\n      movies\n    } = this.state;\n    this.setState({\n      movies: [...movies, newMovie]\n    });\n  }\n\n  movieFilter() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre,\n      movies\n    } = this.state;\n    let filtredMovies = [...movies];\n\n    if (searchText) {\n      filtredMovies = filtredMovies.filter(movie => movie.title.includes(searchText) || movie.subtitle.includes(searchText) || movie.storyline.includes(searchText));\n    }\n\n    if (bookmarkedOnly) {\n      filtredMovies = filtredMovies.filter(movie => movie.bookmarked === true);\n    }\n\n    if (selectedGenre) {\n      filtredMovies = filtredMovies.filter(movie => movie.genre === selectedGenre);\n    }\n\n    return filtredMovies;\n  }\n\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchText: searchText,\n        onSearchTextChange: event => this.onChange(event, 'searchText'),\n        bookmarkedOnly: bookmarkedOnly,\n        onBookmarkedChange: event => this.onChange(event, 'bookmarkedOnly'),\n        selectedGenre: selectedGenre,\n        onSelectedGenreChange: event => this.onChange(event, 'selectedGenre')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: this.movieFilter()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddMovie, {\n        onClick: this.onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/michael/Desenvolvedor/trybe/turma-03-projetos-copia/ana-test/projeto-filme-2/src/components/MovieLibrary.jsx"],"names":["React","SearchBar","MovieList","AddMovie","MovieLibrary","Component","constructor","props","state","searchText","bookmarkedOnly","selectedGenre","movies","onClick","bind","onChange","event","chave","setState","target","checked","value","newMovie","movieFilter","filtredMovies","filter","movie","title","includes","subtitle","storyline","bookmarked","genre","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: this.props.movies,\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onChange(event, chave) {\n    this.setState({ [chave]: (chave === 'bookmarkedOnly' ? event.target.checked : event.target.value) });\n  }\n\n  onClick(newMovie) {\n    const { movies } = this.state;\n    this.setState({ movies: [...movies, newMovie] });\n  }\n\n  movieFilter() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    let filtredMovies = [...movies];\n    if (searchText) {\n      filtredMovies = filtredMovies.filter(\n        (movie) =>\n          movie.title.includes(searchText) ||\n          movie.subtitle.includes(searchText) ||\n          movie.storyline.includes(searchText),\n      );\n    }\n    if (bookmarkedOnly) {\n      filtredMovies = filtredMovies.filter((movie) => movie.bookmarked === true);\n    }\n    if (selectedGenre) {\n      filtredMovies = filtredMovies.filter((movie) => movie.genre === selectedGenre);\n    }\n    return filtredMovies;\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={searchText}\n          onSearchTextChange={(event) => this.onChange(event, 'searchText')}\n          bookmarkedOnly={bookmarkedOnly}\n          onBookmarkedChange={(event) => this.onChange(event, 'bookmarkedOnly')}\n          selectedGenre={selectedGenre}\n          onSelectedGenreChange={(event) =>\n            this.onChange(event, 'selectedGenre')\n          }\n        />\n        <MovieList movies={this.movieFilter()} />\n        <AddMovie onClick={this.onClick} />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n"]},"metadata":{},"sourceType":"module"}