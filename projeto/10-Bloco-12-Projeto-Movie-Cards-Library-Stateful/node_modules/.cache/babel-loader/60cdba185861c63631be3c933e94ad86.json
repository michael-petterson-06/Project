{"ast":null,"code":"var _jsxFileName = \"/home/michael/Desenvolvedor/trybe/projetos/projeto/10-Bloco-12-Projeto-Movie-Cards-Library-Stateful/src/components/MovieLibrary.jsx\";\n// implement MovieLibrary component here\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = (event, chave) => {\n      this.setState({\n        [chave]: chave === 'bookmarkedOnly' ? event.target.checked : event.target.value\n      });\n    };\n\n    this.onClick = novoFilme => {\n      const {\n        movies\n      } = this.state;\n      this.setState({\n        movies: [...movies, novoFilme]\n      });\n    };\n\n    this.filtrarFilme = () => {\n      const {\n        searchText,\n        bookmarkedOnly,\n        selectedGenre,\n        movies\n      } = this.state;\n      let filtredMovies = [...movies];\n\n      if (searchText) {\n        filtredMovies = filtredMovies.filter(movie => movie.title.includes(searchText) || movie.subtitle.includes(searchText) || movie.storyline.includes(searchText));\n      }\n\n      if (bookmarkedOnly) {\n        filtredMovies = filtredMovies.filter(movie => movie.bookmarked === true);\n      }\n\n      if (selectedGenre) {\n        filtredMovies = filtredMovies.filter(movie => movie.genre === selectedGenre);\n      }\n\n      return filtredMovies;\n    };\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: this.props.movies\n    };\n  }\n\n  render() {\n    const {\n      searchText,\n      bookmarkedOnly,\n      selectedGenre\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        searchText: searchText,\n        onSearchTextChange: event => this.onChange(event, 'searchText'),\n        bookmarkedOnly: bookmarkedOnly,\n        onBookmarkedChange: event => this.onChange(event, 'bookmarkedOnly'),\n        selectedGenre: selectedGenre,\n        onSelectedGenreChange: event => this.onChange(event, 'selectedGenre')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        movies: this.filtrarFilme()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddMovie, {\n        onClick: this.onClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default MovieLibrary;","map":{"version":3,"sources":["/home/michael/Desenvolvedor/trybe/projetos/projeto/10-Bloco-12-Projeto-Movie-Cards-Library-Stateful/src/components/MovieLibrary.jsx"],"names":["React","SearchBar","MovieList","AddMovie","MovieLibrary","Component","constructor","props","onChange","event","chave","setState","target","checked","value","onClick","novoFilme","movies","state","filtrarFilme","searchText","bookmarkedOnly","selectedGenre","filtredMovies","filter","movie","title","includes","subtitle","storyline","bookmarked","genre","render"],"mappings":"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","sourcesContent":["// implement MovieLibrary component here\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        searchText: '',\n        bookmarkedOnly: false,\n        selectedGenre: '',\n        movies: this.props.movies,\n    };\n  };\n\n  onChange = (event, chave) => {\n    this.setState({ [chave]: (chave === 'bookmarkedOnly' ? event.target.checked : event.target.value)});\n  }\n  onClick = (novoFilme) => {\n    const { movies } = this.state;\n    this.setState({ movies: [...movies, novoFilme] });\n  }\n\n  filtrarFilme = () => {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    let filtredMovies = [...movies];\n    if (searchText) {\n      filtredMovies = filtredMovies.filter(\n        (movie) =>\n          movie.title.includes(searchText) ||\n          movie.subtitle.includes(searchText) ||\n          movie.storyline.includes(searchText),\n      );\n    }\n    if (bookmarkedOnly) {\n      filtredMovies = filtredMovies.filter((movie) => movie.bookmarked === true);\n    }\n    if (selectedGenre) {\n      filtredMovies = filtredMovies.filter((movie) => movie.genre === selectedGenre);\n    }\n    return filtredMovies;\n  }\n\n  render(){\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;  \n      return (\n        <div>\n          <SearchBar\n            searchText={searchText}\n            onSearchTextChange={(event) => this.onChange(event, 'searchText')}\n            bookmarkedOnly={bookmarkedOnly}\n            onBookmarkedChange={(event) => this.onChange(event, 'bookmarkedOnly')}\n            selectedGenre={selectedGenre}\n            onSelectedGenreChange={(event) =>\n            this.onChange(event, 'selectedGenre')} />\n            <MovieList movies={this.filtrarFilme()} />\n            <AddMovie onClick={this.onClick} />\n        </div> \n      );\n    };\n};\n\nexport default MovieLibrary;"]},"metadata":{},"sourceType":"module"}